{"ast":null,"code":"var _jsxFileName = \"/Users/upendra/Desktop/Developer/blockchain/practice/spearmintTask/stake7/stake7code/Staking/src/AppTask.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport { Component } from \"react\";\nimport Staking from \"./contracts/build/Staking.json\";\nimport StakingTask from \"./contracts/build/StakingTask.json\";\nimport { useEffect, useState } from \"react\";\nimport \"./design.css\"; //import BigNumber from 'bignumber.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [myBalance, setMyBalance] = useState(0);\n  const [stakedBalance, setStakedBalance] = useState(0);\n  const [stakeAmount, setStakeAmount] = useState(0);\n  const [myStakedAmount, setMyStakedAmount] = useState(0);\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\n  const [apr, setApr] = useState();\n  const [timer, setTimer] = useState();\n  const [isContentVisible, setIsContentVisible] = useState(false);\n\n  const toggleContent = () => {\n    setIsContentVisible(!isContentVisible);\n  };\n\n  useEffect(() => {\n    loadWallet();\n    getContract();\n    getAprAndTimer();\n  }, []);\n\n  const loadWallet = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const accounts = await provider.listAccounts();\n    const account = accounts[0];\n    const balance = await provider.getBalance(account);\n    const balanceInEth = ethers.utils.formatEther(balance);\n    setProvider(provider);\n    setAccount(account);\n    setMyBalance(balanceInEth);\n  };\n\n  const getContract = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const {\n      chainId\n    } = await provider.getNetwork();\n    const networkData = Staking.networks[5777];\n\n    if (networkData) {\n      const abi = StakingTask.abi;\n      const contractAddress = \"0x571f830C36EAFAe5d11654211636291fa0e460A9\";\n      const signer = provider.getSigner();\n      const contract = await new ethers.Contract(contractAddress, abi, signer);\n      setContract(contract);\n    }\n  };\n\n  const getStakedBalance = async () => {\n    if (!contract) return;\n    const stakedBalance = await contract.totalStakedToken();\n    const balanceInEth = ethers.utils.formatEther(stakedBalance);\n    setStakedBalance(balanceInEth);\n  };\n\n  const getmyStakedAmount = async () => {\n    if (!contract) return;\n    const amount = await contract.stakedToken({\n      from: account\n    });\n    const poollimit = await contract.poolLimitPerUser();\n    const balancepool = ethers.utils.formatEther(poollimit);\n    const balanceInEth = ethers.utils.formatEther(amount);\n    setMyStakedAmount(balanceInEth);\n  };\n\n  const handleChange = event => {\n    setStakeAmount(event.target.value);\n  };\n\n  const stake = async () => {\n    if (!contract) return;\n    await contract.deposit(stakeAmount, {\n      gasLimit: 750000\n    });\n  };\n\n  const withdraw = async () => {\n    if (!contract) return;\n    await contract.withdraw(withdrawAmount);\n  };\n\n  const getAprAndTimer = async () => {\n    if (!contract) return;\n    const bonusendblock = await contract.bonusEndBlock();\n    const startblock = await contract.startBlock();\n    const remainingBlocks = bonusendblock - startblock;\n    const remainingTimeInSeconds = remainingBlocks * 15;\n    const remainingDays = remainingTimeInSeconds / (60 * 60 * 24);\n    const timer = remainingDays;\n    const stakedTokenSupply = await contract.stakedToken({\n      from: account\n    });\n    const stakedTokenSupplyEth = ethers.utils.formatEther(stakedTokenSupply);\n    const blocksPerYear = 365 / 15;\n    const rewardperblock = await contract.rewardPerBlock();\n    const annualReward = rewardperblock * blocksPerYear;\n    const precision = await contract.PRECISION_FACTOR();\n    const aprval = annualReward * precision / stakedTokenSupplyEth;\n    setApr(aprval);\n    setTimer(timer);\n    console.log(typeof timer);\n  };\n\n  getAprAndTimer();\n  getmyStakedAmount();\n  getStakedBalance();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [\"Hello \", account, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Balance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 32\n      }, this), \" \", myBalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sections-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"section-title\",\n              children: \"Earn FTM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"section-title\",\n              children: [\"Timer: \", timer, \" days \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"section-title\",\n              children: [\"APR: \", apr, \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"section-title\",\n              children: [\"Total Staked \", myStakedAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"section-title\",\n              children: [\"My Staked \", stakedBalance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [\"hide\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleContent,\n              children: \"Toggle Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), isContentVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sections-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"amount\",\n                        name: \"amount\",\n                        onChange: handleChange,\n                        value: stakeAmount,\n                        autoComplete: \"off\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: stake,\n                        children: \"Stake\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      id: \"amountWithdraw\",\n                      name: \"amountWithdraw\",\n                      onChange: event => setWithdrawAmount(event.target.value),\n                      value: withdrawAmount,\n                      autoComplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: withdraw,\n                      children: \"Withdraw\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gaRf5t9810DW3DV/5/ItiHiBUM8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","Component","Staking","StakingTask","useEffect","useState","App","provider","setProvider","account","setAccount","contract","setContract","myBalance","setMyBalance","stakedBalance","setStakedBalance","stakeAmount","setStakeAmount","myStakedAmount","setMyStakedAmount","withdrawAmount","setWithdrawAmount","apr","setApr","timer","setTimer","isContentVisible","setIsContentVisible","toggleContent","loadWallet","getContract","getAprAndTimer","providers","Web3Provider","window","ethereum","send","accounts","listAccounts","balance","getBalance","balanceInEth","utils","formatEther","chainId","getNetwork","networkData","networks","abi","contractAddress","signer","getSigner","Contract","getStakedBalance","totalStakedToken","getmyStakedAmount","amount","stakedToken","from","poollimit","poolLimitPerUser","balancepool","handleChange","event","target","value","stake","deposit","gasLimit","withdraw","bonusendblock","bonusEndBlock","startblock","startBlock","remainingBlocks","remainingTimeInSeconds","remainingDays","stakedTokenSupply","stakedTokenSupplyEth","blocksPerYear","rewardperblock","rewardPerBlock","annualReward","precision","PRECISION_FACTOR","aprval","console","log"],"sources":["/Users/upendra/Desktop/Developer/blockchain/practice/spearmintTask/stake7/stake7code/Staking/src/AppTask.js"],"sourcesContent":["import \"./App.css\";\nimport { ethers } from \"ethers\";\nimport { Component } from \"react\";\nimport Staking from \"./contracts/build/Staking.json\";\nimport StakingTask from \"./contracts/build/StakingTask.json\";\nimport { useEffect, useState } from \"react\";\nimport \"./design.css\";\n//import BigNumber from 'bignumber.js';\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [myBalance, setMyBalance] = useState(0);\n  const [stakedBalance, setStakedBalance] = useState(0);\n  const [stakeAmount, setStakeAmount] = useState(0);\n  const [myStakedAmount, setMyStakedAmount] = useState(0);\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\n  const [apr, setApr] = useState();\n  const [timer, setTimer] = useState();\n  const [isContentVisible, setIsContentVisible] = useState(false);\n\n  const toggleContent = () => {\n    setIsContentVisible(!isContentVisible);\n  };\n\n  useEffect(() => {\n    loadWallet();\n    getContract();\n    getAprAndTimer();\n  }, []);\n\n  const loadWallet = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const accounts = await provider.listAccounts();\n    const account = accounts[0];\n    const balance = await provider.getBalance(account);\n    const balanceInEth = ethers.utils.formatEther(balance);\n\n    setProvider(provider);\n    setAccount(account);\n    setMyBalance(balanceInEth);\n  };\n\n  const getContract = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const { chainId } = await provider.getNetwork();\n    const networkData = Staking.networks[5777];\n\n    if (networkData) {\n      const abi = StakingTask.abi;\n      const contractAddress = \"0x571f830C36EAFAe5d11654211636291fa0e460A9\";\n      const signer = provider.getSigner();\n      const contract = await new ethers.Contract(contractAddress, abi, signer);\n\n      setContract(contract);\n    }\n  };\n\n  const getStakedBalance = async () => {\n    if (!contract) return;\n\n    const stakedBalance = await contract.totalStakedToken();\n    const balanceInEth = ethers.utils.formatEther(stakedBalance);\n\n    setStakedBalance(balanceInEth);\n  };\n\n  const getmyStakedAmount = async () => {\n    if (!contract) return;\n\n    const amount = await contract.stakedToken({ from: account });\n    const poollimit = await contract.poolLimitPerUser();\n    const balancepool = ethers.utils.formatEther(poollimit);\n    const balanceInEth = ethers.utils.formatEther(amount);\n\n    setMyStakedAmount(balanceInEth);\n  };\n\n  const handleChange = (event) => {\n    setStakeAmount(event.target.value);\n  };\n\n  const stake = async () => {\n    if (!contract) return;\n\n    await contract.deposit(stakeAmount, { gasLimit: 750000 });\n  };\n\n  const withdraw = async () => {\n    if (!contract) return;\n\n    await contract.withdraw(withdrawAmount);\n  };\n\n  const getAprAndTimer = async () => {\n    if (!contract) return;\n    const bonusendblock = await contract.bonusEndBlock();\n    const startblock = await contract.startBlock();\n    const remainingBlocks = bonusendblock - startblock;\n\n    const remainingTimeInSeconds = remainingBlocks * 15;\n    const remainingDays = remainingTimeInSeconds / (60 * 60 * 24);\n    const timer = remainingDays;\n    const stakedTokenSupply = await contract.stakedToken({\n      from: account,\n    });\n    const stakedTokenSupplyEth = ethers.utils.formatEther(stakedTokenSupply);\n\n    const blocksPerYear = 365 / 15;\n    const rewardperblock = await contract.rewardPerBlock();\n    const annualReward = rewardperblock * blocksPerYear;\n    const precision = await contract.PRECISION_FACTOR();\n    const aprval = (annualReward * precision) / stakedTokenSupplyEth;\n\n    setApr(aprval);\n    setTimer(timer);\n    console.log(typeof timer);\n  };\n  getAprAndTimer();\n  getmyStakedAmount();\n  getStakedBalance();\n\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        Hello {account} <br /> <b>Balance:</b> {myBalance}\n      </div>\n\n      <div className=\"body\">\n        <div className=\"Card\">\n          <div className=\"sections-container\">\n            <div className=\"section\">\n              {\" \"}\n              <span className=\"section-title\">Earn FTM</span>\n            </div>\n            <div className=\"section\">\n              <span className=\"section-title\">\n                Timer: {timer} days <br />\n              </span>\n            </div>\n            <div className=\"section\">\n              <span className=\"section-title\">\n                APR: {apr}% <br />\n              </span>\n            </div>\n\n            <div className=\"section\">\n              <span className=\"section-title\">Total Staked {myStakedAmount}</span>{\" \"}\n             \n              {/* <button onClick={getmyStakedAmount}>Refresh</button> */}\n            </div>\n            <div className=\"section\">\n              <span className=\"section-title\">My Staked {stakedBalance}</span> \n              {/* <button onStakedBalance}>Refresh</button> */}\n            </div>\n            <div className=\"section\">\n              hide\n              <button onClick={toggleContent}>Toggle Content</button>\n              {isContentVisible && (\n                <div className=\"content\">\n                  <div>\n                    <div className=\"Card\">\n                      <div className=\"sections-container\">\n                        <div className=\"section\">\n                          <input\n                            type=\"text\"\n                            id=\"amount\"\n                            name=\"amount\"\n                            onChange={handleChange}\n                            value={stakeAmount}\n                            autoComplete=\"off\"\n                          ></input>\n                          <button onClick={stake}>Stake</button>\n                        </div>\n                      </div>\n                      <div className=\"section\">\n                        <input\n                          type=\"text\"\n                          id=\"amountWithdraw\"\n                          name=\"amountWithdraw\"\n                          onChange={(event) =>\n                            setWithdrawAmount(event.target.value)\n                          }\n                          value={withdrawAmount}\n                          autoComplete=\"off\"\n                        ></input>\n                        <button onClick={withdraw}>Withdraw</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}