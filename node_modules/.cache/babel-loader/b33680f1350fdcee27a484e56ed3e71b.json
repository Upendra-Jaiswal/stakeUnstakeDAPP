{"ast":null,"code":"var _jsxFileName = \"/Users/upendra/Desktop/Developer/blockchain/practice/spearmintTask/stake7/stake7code/Staking/src/AppTask.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport { Component } from \"react\";\nimport Staking from \"./contracts/build/Staking.json\";\nimport StakingTask from \"./contracts/build/StakingTask.json\";\nimport { useEffect, useState } from \"react\"; //import BigNumber from 'bignumber.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [myBalance, setMyBalance] = useState(0);\n  const [stakedBalance, setStakedBalance] = useState(0);\n  const [stakeAmount, setStakeAmount] = useState(0);\n  const [myStakedAmount, setMyStakedAmount] = useState(0);\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\n  useEffect(() => {\n    loadWallet();\n    getContract();\n    getAprAndTimer();\n  }, []);\n\n  const loadWallet = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const accounts = await provider.listAccounts();\n    const account = accounts[0];\n    const balance = await provider.getBalance(account);\n    const balanceInEth = ethers.utils.formatEther(balance);\n    setProvider(provider);\n    setAccount(account);\n    setMyBalance(balanceInEth);\n  };\n\n  const getContract = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const {\n      chainId\n    } = await provider.getNetwork();\n    const networkData = Staking.networks[5777];\n\n    if (networkData) {\n      const abi = StakingTask.abi;\n      const contractAddress = \"0x571f830C36EAFAe5d11654211636291fa0e460A9\";\n      const signer = provider.getSigner();\n      const contract = await new ethers.Contract(contractAddress, abi, signer);\n      setContract(contract);\n    }\n  };\n\n  const getStakedBalance = async () => {\n    if (!contract) return;\n    const stakedBalance = await contract.totalStakedToken();\n    const balanceInEth = ethers.utils.formatEther(stakedBalance);\n    setStakedBalance(balanceInEth);\n  };\n\n  const getmyStakedAmount = async () => {\n    if (!contract) return;\n    const amount = await contract.stakedToken({\n      from: account\n    });\n    const poollimit = await contract.poolLimitPerUser();\n    const balancepool = ethers.utils.formatEther(poollimit);\n    const balanceInEth = ethers.utils.formatEther(amount);\n    setMyStakedAmount(balanceInEth);\n  };\n\n  const handleChange = event => {\n    setStakeAmount(event.target.value);\n  };\n\n  const stake = async () => {\n    if (!contract) return;\n    await contract.deposit(stakeAmount, {\n      gasLimit: 750000\n    });\n  };\n\n  const withdraw = async () => {\n    if (!contract) return;\n    await contract.withdraw(withdrawAmount);\n  };\n\n  let timer,\n      apr = 0;\n\n  const getAprAndTimer = async () => {\n    if (!contract) return;\n    const bonusendblock = await contract.bonusEndBlock();\n    const startblock = await contract.startBlock();\n    const remainingBlocks = bonusendblock - startblock;\n    const remainingTimeInSeconds = remainingBlocks * 15;\n    const remainingDays = remainingTimeInSeconds / (60 * 60 * 24);\n    const timer = remainingDays;\n    const stakedTokenSupply = await contract.stakedToken({\n      from: account\n    });\n    const stakedTokenSupplyEth = ethers.utils.formatEther(stakedTokenSupply);\n    const blocksPerYear = 365 / 15;\n    const rewardperblock = await contract.rewardPerBlock();\n    const annualReward = rewardperblock * blocksPerYear;\n    const precision = await contract.PRECISION_FACTOR();\n    const apr = annualReward * precision / stakedTokenSupplyEth;\n    serApr(apr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Hello \", account, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Balance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \" \", myBalance, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Timer: \", timer, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"APR: \", apr.toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"My Staked Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), \" \", myStakedAmount, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getmyStakedAmount,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Total Staked Amount: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), \" \", stakedBalance, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getStakedBalance,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"amount\",\n          name: \"amount\",\n          onChange: handleChange,\n          value: stakeAmount,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stake,\n          children: \"Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"amountWithdraw\",\n        name: \"amountWithdraw\",\n        onChange: event => setWithdrawAmount(event.target.value),\n        value: withdrawAmount,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: withdraw,\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cAgEm/Ru1QvWD7IW/DSLMDr/DSg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","Component","Staking","StakingTask","useEffect","useState","App","provider","setProvider","account","setAccount","contract","setContract","myBalance","setMyBalance","stakedBalance","setStakedBalance","stakeAmount","setStakeAmount","myStakedAmount","setMyStakedAmount","withdrawAmount","setWithdrawAmount","loadWallet","getContract","getAprAndTimer","providers","Web3Provider","window","ethereum","send","accounts","listAccounts","balance","getBalance","balanceInEth","utils","formatEther","chainId","getNetwork","networkData","networks","abi","contractAddress","signer","getSigner","Contract","getStakedBalance","totalStakedToken","getmyStakedAmount","amount","stakedToken","from","poollimit","poolLimitPerUser","balancepool","handleChange","event","target","value","stake","deposit","gasLimit","withdraw","timer","apr","bonusendblock","bonusEndBlock","startblock","startBlock","remainingBlocks","remainingTimeInSeconds","remainingDays","stakedTokenSupply","stakedTokenSupplyEth","blocksPerYear","rewardperblock","rewardPerBlock","annualReward","precision","PRECISION_FACTOR","serApr","toFixed"],"sources":["/Users/upendra/Desktop/Developer/blockchain/practice/spearmintTask/stake7/stake7code/Staking/src/AppTask.js"],"sourcesContent":["import \"./App.css\";\nimport { ethers } from \"ethers\";\nimport { Component } from \"react\";\nimport Staking from \"./contracts/build/Staking.json\";\nimport StakingTask from \"./contracts/build/StakingTask.json\";\nimport { useEffect, useState } from \"react\";\n//import BigNumber from 'bignumber.js';\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [myBalance, setMyBalance] = useState(0);\n  const [stakedBalance, setStakedBalance] = useState(0);\n  const [stakeAmount, setStakeAmount] = useState(0);\n  const [myStakedAmount, setMyStakedAmount] = useState(0);\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\n\n  useEffect(() => {\n    loadWallet();\n    getContract();\n    getAprAndTimer();\n  }, []);\n\n  const loadWallet = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const accounts = await provider.listAccounts();\n    const account = accounts[0];\n    const balance = await provider.getBalance(account);\n    const balanceInEth = ethers.utils.formatEther(balance);\n\n    setProvider(provider);\n    setAccount(account);\n    setMyBalance(balanceInEth);\n  };\n\n  const getContract = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const { chainId } = await provider.getNetwork();\n    const networkData = Staking.networks[5777];\n\n    if (networkData) {\n      const abi = StakingTask.abi;\n      const contractAddress = \"0x571f830C36EAFAe5d11654211636291fa0e460A9\";\n      const signer = provider.getSigner();\n      const contract = await new ethers.Contract(contractAddress, abi, signer);\n\n      setContract(contract);\n    }\n  };\n\n  const getStakedBalance = async () => {\n    if (!contract) return;\n\n    const stakedBalance = await contract.totalStakedToken();\n    const balanceInEth = ethers.utils.formatEther(stakedBalance);\n\n    setStakedBalance(balanceInEth);\n  };\n\n  const getmyStakedAmount = async () => {\n    if (!contract) return;\n\n    const amount = await contract.stakedToken({ from: account });\n    const poollimit = await contract.poolLimitPerUser();\n    const balancepool = ethers.utils.formatEther(poollimit);\n    const balanceInEth = ethers.utils.formatEther(amount);\n\n    setMyStakedAmount(balanceInEth);\n  };\n\n  const handleChange = (event) => {\n    setStakeAmount(event.target.value);\n  };\n\n  const stake = async () => {\n    if (!contract) return;\n\n    await contract.deposit(stakeAmount, { gasLimit: 750000 });\n  };\n\n  const withdraw = async () => {\n    if (!contract) return;\n\n    await contract.withdraw(withdrawAmount);\n  };\n\n  let timer,\n    apr = 0;\n\n  const getAprAndTimer = async () => {\n    if (!contract) return;\n    const bonusendblock = await contract.bonusEndBlock();\n    const startblock = await contract.startBlock();\n    const remainingBlocks = bonusendblock - startblock;\n\n    const remainingTimeInSeconds = remainingBlocks * 15;\n    const remainingDays = remainingTimeInSeconds / (60 * 60 * 24);\n    const timer = remainingDays;\n    const stakedTokenSupply = await contract.stakedToken({\n      from: account,\n    });\n    const stakedTokenSupplyEth = ethers.utils.formatEther(stakedTokenSupply);\n\n    const blocksPerYear = 365 / 15;\n    const rewardperblock = await contract.rewardPerBlock();\n    const annualReward = rewardperblock * blocksPerYear;\n    const precision = await contract.PRECISION_FACTOR();\n    const apr = (annualReward * precision) / stakedTokenSupplyEth;\n\n\n    serApr(apr)\n  };\n\n  return (\n    <div className=\"App\">\n      Hello {account}\n      <div>\n        <b>Balance:</b> {myBalance}\n        <span>\n          Timer: {timer} <br />\n        </span>\n        <span>\n          APR: {apr.toFixed(2)}% <br />\n        </span>\n      </div>\n      <div>\n        <b>My Staked Amount:</b> {myStakedAmount}\n        <button onClick={getmyStakedAmount}>Refresh</button>\n      </div>\n      <div>\n        <b>Total Staked Amount: </b> {stakedBalance}\n        <button onClick={getStakedBalance}>Refresh</button>\n      </div>\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            id=\"amount\"\n            name=\"amount\"\n            onChange={handleChange}\n            value={stakeAmount}\n            autoComplete=\"off\"\n          ></input>\n          <button onClick={stake}>Stake</button>\n        </div>\n        <input\n          type=\"text\"\n          id=\"amountWithdraw\"\n          name=\"amountWithdraw\"\n          onChange={(event) => setWithdrawAmount(event.target.value)}\n          value={withdrawAmount}\n          autoComplete=\"off\"\n        ></input>\n        <button onClick={withdraw}>Withdraw</button>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}