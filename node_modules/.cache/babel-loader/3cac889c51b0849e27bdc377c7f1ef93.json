{"ast":null,"code":"var _jsxFileName = \"/Users/upendra/Desktop/Developer/blockchain/practice/spearmintTask/stake7/stake7code/Staking/src/AppTask.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport { Component } from \"react\";\nimport Staking from \"./contracts/build/Staking.json\";\nimport StakingTask from \"./contracts/build/StakingTask.json\";\nimport { useEffect, useState } from \"react\"; //import BigNumber from 'bignumber.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [myBalance, setMyBalance] = useState(0);\n  const [stakedBalance, setStakedBalance] = useState(0);\n  const [stakeAmount, setStakeAmount] = useState(0);\n  const [myStakedAmount, setMyStakedAmount] = useState(0);\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\n  const [timer, setTimer] = useState(1);\n  const [apr, setApr] = useState(1);\n  useEffect(() => {\n    loadWallet();\n    getContract();\n  }, []);\n\n  const loadWallet = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const accounts = await provider.listAccounts();\n    const account = accounts[0];\n    const balance = await provider.getBalance(account);\n    const balanceInEth = ethers.utils.formatEther(balance);\n    setProvider(provider);\n    setAccount(account);\n    setMyBalance(balanceInEth);\n  };\n\n  const getContract = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const {\n      chainId\n    } = await provider.getNetwork();\n    const networkData = Staking.networks[5777];\n\n    if (networkData) {\n      const abi = StakingTask.abi;\n      const contractAddress = \"0x571f830C36EAFAe5d11654211636291fa0e460A9\";\n      const signer = provider.getSigner();\n      const contract = await new ethers.Contract(contractAddress, abi, signer);\n      setContract(contract);\n    }\n  };\n\n  const getStakedBalance = async () => {\n    if (!contract) return;\n    const stakedBalance = await contract.totalStakedToken();\n    const balanceInEth = ethers.utils.formatEther(stakedBalance);\n    setStakedBalance(balanceInEth);\n    setTimer(timer);\n    setApr(aprpercent);\n  };\n\n  const getmyStakedAmount = async () => {\n    if (!contract) return;\n    const amount = await contract.stakedToken({\n      from: account\n    });\n    const poollimit = await contract.poolLimitPerUser();\n    const balancepool = ethers.utils.formatEther(poollimit);\n    const balanceInEth = ethers.utils.formatEther(amount);\n    setMyStakedAmount(balanceInEth);\n  };\n\n  const handleChange = event => {\n    setStakeAmount(event.target.value);\n  };\n\n  const stake = async () => {\n    if (!contract) return;\n    await contract.deposit(stakeAmount, {\n      gasLimit: 750000\n    });\n  };\n\n  const withdraw = async () => {\n    if (!contract) return;\n    await contract.withdraw(withdrawAmount);\n  };\n\n  const getAprAndTimer = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Hello \", account, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Balance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), \" \", myBalance, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Timer: \", timer, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"APR: \", apr.toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"My Staked Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \" \", myStakedAmount, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getmyStakedAmount,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Total Staked Amount: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), \" \", stakedBalance, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getStakedBalance,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"amount\",\n          name: \"amount\",\n          onChange: handleChange,\n          value: stakeAmount,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stake,\n          children: \"Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"amountWithdraw\",\n        name: \"amountWithdraw\",\n        onChange: event => setWithdrawAmount(event.target.value),\n        value: withdrawAmount,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: withdraw,\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HsScWP5RZZS+jSKXRIEwc/JtNAY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","Component","Staking","StakingTask","useEffect","useState","App","provider","setProvider","account","setAccount","contract","setContract","myBalance","setMyBalance","stakedBalance","setStakedBalance","stakeAmount","setStakeAmount","myStakedAmount","setMyStakedAmount","withdrawAmount","setWithdrawAmount","timer","setTimer","apr","setApr","loadWallet","getContract","providers","Web3Provider","window","ethereum","send","accounts","listAccounts","balance","getBalance","balanceInEth","utils","formatEther","chainId","getNetwork","networkData","networks","abi","contractAddress","signer","getSigner","Contract","getStakedBalance","totalStakedToken","aprpercent","getmyStakedAmount","amount","stakedToken","from","poollimit","poolLimitPerUser","balancepool","handleChange","event","target","value","stake","deposit","gasLimit","withdraw","getAprAndTimer","toFixed"],"sources":["/Users/upendra/Desktop/Developer/blockchain/practice/spearmintTask/stake7/stake7code/Staking/src/AppTask.js"],"sourcesContent":["import \"./App.css\";\nimport { ethers } from \"ethers\";\nimport { Component } from \"react\";\nimport Staking from \"./contracts/build/Staking.json\";\nimport StakingTask from \"./contracts/build/StakingTask.json\";\nimport { useEffect, useState } from \"react\";\n//import BigNumber from 'bignumber.js';\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [myBalance, setMyBalance] = useState(0);\n  const [stakedBalance, setStakedBalance] = useState(0);\n  const [stakeAmount, setStakeAmount] = useState(0);\n  const [myStakedAmount, setMyStakedAmount] = useState(0);\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\n  const [timer, setTimer] = useState(1);\n  const [apr, setApr] = useState(1);\n\n  useEffect(() => {\n    loadWallet();\n    getContract();\n  }, []);\n\n  const loadWallet = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const accounts = await provider.listAccounts();\n    const account = accounts[0];\n    const balance = await provider.getBalance(account);\n    const balanceInEth = ethers.utils.formatEther(balance);\n\n    setProvider(provider);\n    setAccount(account);\n    setMyBalance(balanceInEth);\n  };\n\n  const getContract = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const { chainId } = await provider.getNetwork();\n    const networkData = Staking.networks[5777];\n\n    if (networkData) {\n      const abi = StakingTask.abi;\n      const contractAddress = \"0x571f830C36EAFAe5d11654211636291fa0e460A9\";\n      const signer = provider.getSigner();\n      const contract = await new ethers.Contract(contractAddress, abi, signer);\n\n      setContract(contract);\n    }\n  };\n\n  const getStakedBalance = async () => {\n    if (!contract) return;\n\n    const stakedBalance = await contract.totalStakedToken();\n    const balanceInEth = ethers.utils.formatEther(stakedBalance);\n\n\n    setStakedBalance(balanceInEth);\n    setTimer(timer);\n    setApr(aprpercent);\n  };\n\n  const getmyStakedAmount = async () => {\n    if (!contract) return;\n\n    const amount = await contract.stakedToken({ from: account });\n    const poollimit = await contract.poolLimitPerUser();\n    const balancepool = ethers.utils.formatEther(poollimit);\n    const balanceInEth = ethers.utils.formatEther(amount);\n\n    setMyStakedAmount(balanceInEth);\n  };\n\n  const handleChange = (event) => {\n    setStakeAmount(event.target.value);\n  };\n\n  const stake = async () => {\n    if (!contract) return;\n\n    await contract.deposit(stakeAmount, { gasLimit: 750000 });\n  };\n\n  const withdraw = async () => {\n    if (!contract) return;\n\n    await contract.withdraw(withdrawAmount);\n  };\n\n  const getAprAndTimer = () => {};\n\n  return (\n    <div className=\"App\">\n      Hello {account}\n      <div>\n        <b>Balance:</b> {myBalance}\n        <span>\n          Timer: {timer} <br />\n        </span>\n        <span>\n          APR: {apr.toFixed(2)}% <br />\n        </span>\n      </div>\n      <div>\n        <b>My Staked Amount:</b> {myStakedAmount}\n        <button onClick={getmyStakedAmount}>Refresh</button>\n      </div>\n      <div>\n        <b>Total Staked Amount: </b> {stakedBalance}\n        <button onClick={getStakedBalance}>Refresh</button>\n      </div>\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            id=\"amount\"\n            name=\"amount\"\n            onChange={handleChange}\n            value={stakeAmount}\n            autoComplete=\"off\"\n          ></input>\n          <button onClick={stake}>Stake</button>\n        </div>\n        <input\n          type=\"text\"\n          id=\"amountWithdraw\"\n          name=\"amountWithdraw\"\n          onChange={(event) => setWithdrawAmount(event.target.value)}\n          value={withdrawAmount}\n          autoComplete=\"off\"\n        ></input>\n        <button onClick={withdraw}>Withdraw</button>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAAD,CAA1C;EACA,MAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,CAAD,CAAlD;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,CAAD,CAApD;EACA,MAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,CAAD,CAApD;EACA,MAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACoB,GAAD,EAAMC,MAAN,IAAgBrB,QAAQ,CAAC,CAAD,CAA9B;EAEAD,SAAS,CAAC,MAAM;IACduB,UAAU;IACVC,WAAW;EACZ,CAHQ,EAGN,EAHM,CAAT;;EAKA,MAAMD,UAAU,GAAG,YAAY;IAC7B,MAAMpB,QAAQ,GAAG,IAAIP,MAAM,CAAC6B,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;IACA,MAAMzB,QAAQ,CAAC0B,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;IACA,MAAMC,QAAQ,GAAG,MAAM3B,QAAQ,CAAC4B,YAAT,EAAvB;IACA,MAAM1B,OAAO,GAAGyB,QAAQ,CAAC,CAAD,CAAxB;IACA,MAAME,OAAO,GAAG,MAAM7B,QAAQ,CAAC8B,UAAT,CAAoB5B,OAApB,CAAtB;IACA,MAAM6B,YAAY,GAAGtC,MAAM,CAACuC,KAAP,CAAaC,WAAb,CAAyBJ,OAAzB,CAArB;IAEA5B,WAAW,CAACD,QAAD,CAAX;IACAG,UAAU,CAACD,OAAD,CAAV;IACAK,YAAY,CAACwB,YAAD,CAAZ;EACD,CAXD;;EAaA,MAAMV,WAAW,GAAG,YAAY;IAC9B,MAAMrB,QAAQ,GAAG,IAAIP,MAAM,CAAC6B,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;IACA,MAAM;MAAES;IAAF,IAAc,MAAMlC,QAAQ,CAACmC,UAAT,EAA1B;IACA,MAAMC,WAAW,GAAGzC,OAAO,CAAC0C,QAAR,CAAiB,IAAjB,CAApB;;IAEA,IAAID,WAAJ,EAAiB;MACf,MAAME,GAAG,GAAG1C,WAAW,CAAC0C,GAAxB;MACA,MAAMC,eAAe,GAAG,4CAAxB;MACA,MAAMC,MAAM,GAAGxC,QAAQ,CAACyC,SAAT,EAAf;MACA,MAAMrC,QAAQ,GAAG,MAAM,IAAIX,MAAM,CAACiD,QAAX,CAAoBH,eAApB,EAAqCD,GAArC,EAA0CE,MAA1C,CAAvB;MAEAnC,WAAW,CAACD,QAAD,CAAX;IACD;EACF,CAbD;;EAeA,MAAMuC,gBAAgB,GAAG,YAAY;IACnC,IAAI,CAACvC,QAAL,EAAe;IAEf,MAAMI,aAAa,GAAG,MAAMJ,QAAQ,CAACwC,gBAAT,EAA5B;IACA,MAAMb,YAAY,GAAGtC,MAAM,CAACuC,KAAP,CAAaC,WAAb,CAAyBzB,aAAzB,CAArB;IAGAC,gBAAgB,CAACsB,YAAD,CAAhB;IACAd,QAAQ,CAACD,KAAD,CAAR;IACAG,MAAM,CAAC0B,UAAD,CAAN;EACD,CAVD;;EAYA,MAAMC,iBAAiB,GAAG,YAAY;IACpC,IAAI,CAAC1C,QAAL,EAAe;IAEf,MAAM2C,MAAM,GAAG,MAAM3C,QAAQ,CAAC4C,WAAT,CAAqB;MAAEC,IAAI,EAAE/C;IAAR,CAArB,CAArB;IACA,MAAMgD,SAAS,GAAG,MAAM9C,QAAQ,CAAC+C,gBAAT,EAAxB;IACA,MAAMC,WAAW,GAAG3D,MAAM,CAACuC,KAAP,CAAaC,WAAb,CAAyBiB,SAAzB,CAApB;IACA,MAAMnB,YAAY,GAAGtC,MAAM,CAACuC,KAAP,CAAaC,WAAb,CAAyBc,MAAzB,CAArB;IAEAlC,iBAAiB,CAACkB,YAAD,CAAjB;EACD,CATD;;EAWA,MAAMsB,YAAY,GAAIC,KAAD,IAAW;IAC9B3C,cAAc,CAAC2C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,KAAK,GAAG,YAAY;IACxB,IAAI,CAACrD,QAAL,EAAe;IAEf,MAAMA,QAAQ,CAACsD,OAAT,CAAiBhD,WAAjB,EAA8B;MAAEiD,QAAQ,EAAE;IAAZ,CAA9B,CAAN;EACD,CAJD;;EAMA,MAAMC,QAAQ,GAAG,YAAY;IAC3B,IAAI,CAACxD,QAAL,EAAe;IAEf,MAAMA,QAAQ,CAACwD,QAAT,CAAkB9C,cAAlB,CAAN;EACD,CAJD;;EAMA,MAAM+C,cAAc,GAAG,MAAM,CAAE,CAA/B;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,qBACS3D,OADT,eAEE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,OACmBI,SADnB,eAEE;QAAA,sBACUU,KADV,oBACiB;UAAA;UAAA;UAAA;QAAA,QADjB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE;QAAA,oBACQE,GAAG,CAAC4C,OAAJ,CAAY,CAAZ,CADR,qBACyB;UAAA;UAAA;UAAA;QAAA,QADzB;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAWE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,OAC4BlD,cAD5B,eAEE;QAAQ,OAAO,EAAEkC,iBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAeE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,OACgCtC,aADhC,eAEE;QAAQ,OAAO,EAAEmC,gBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAfF,eAmBE;MAAA,wBACE;QAAA,wBACE;UACE,IAAI,EAAC,MADP;UAEE,EAAE,EAAC,QAFL;UAGE,IAAI,EAAC,QAHP;UAIE,QAAQ,EAAEU,YAJZ;UAKE,KAAK,EAAE3C,WALT;UAME,YAAY,EAAC;QANf;UAAA;UAAA;UAAA;QAAA,QADF,eASE;UAAQ,OAAO,EAAE+C,KAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAYE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,gBAFL;QAGE,IAAI,EAAC,gBAHP;QAIE,QAAQ,EAAGH,KAAD,IAAWvC,iBAAiB,CAACuC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJxC;QAKE,KAAK,EAAE1C,cALT;QAME,YAAY,EAAC;MANf;QAAA;QAAA;QAAA;MAAA,QAZF,eAoBE;QAAQ,OAAO,EAAE8C,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QApBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4CD;;GAlIQ7D,G;;KAAAA,G;AAmIT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}