{"ast":null,"code":"var _jsxFileName = \"/Users/upendra/Desktop/Developer/blockchain/practice/spearmintTask/stake7/stake7code/Staking/src/App.js\";\nimport './App.css';\nimport { ethers } from 'ethers';\nimport { Component } from 'react';\nimport Staking from './contracts/build/Staking.json';\nimport StakingTask from './contracts/build/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadWallet = async () => {\n      // A Web3Provider wraps a standard Web3 provider, which is\n      // what MetaMask injects as window.ethereum into each page\n      const provider = new ethers.providers.Web3Provider(window.ethereum); // // MetaMask requires requesting permission to connect users accounts\n\n      await provider.send(\"eth_requestAccounts\", []);\n      const accounts = await provider.listAccounts();\n      const account = accounts[0];\n      const balance = await provider.getBalance(account);\n      const balanceInEth = ethers.utils.formatEther(balance);\n      this.setState({\n        provider: provider,\n        account: account,\n        myBalance: balanceInEth\n      });\n    };\n\n    this.setContract = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum); //const networkId = await ethers.net.getId();\n\n      const {\n        chainId\n      } = await provider.getNetwork();\n      const networkData = Staking.networks[5777];\n\n      if (networkData) {\n        const abi = Staking.abi;\n        const contractAddress = networkData.address;\n        console.log('abi', abi);\n        const signer = provider.getSigner();\n        const contract = await new ethers.Contract(contractAddress, abi, signer);\n        this.setState({\n          contract: contract\n        });\n      }\n    };\n\n    this.getStakedBalance = async () => {\n      const contract = this.state.contract;\n      const stakedBalance = await contract.getStakedBalance();\n      const balanceInEth = ethers.utils.formatEther(stakedBalance);\n      this.setState({\n        stakedBalance: balanceInEth\n      });\n    };\n\n    this.stake = async () => {\n      const contract = this.state.contract;\n      await contract.stack({\n        from: this.state.account,\n        value: ethers.utils.parseEther(this.state.stakeAmount)\n      });\n    };\n\n    this.withdraw = async () => {\n      const contract = this.state.contract;\n      await contract.withdraw({\n        from: this.state.account\n      });\n    };\n\n    this.myStakedAmount = async () => {\n      const contract = this.state.contract;\n      const amount = await contract.myStakedAmount({\n        from: this.state.account\n      });\n      const balanceInEth = ethers.utils.formatEther(amount);\n      this.setState({\n        myStakedAmount: balanceInEth\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        stakeAmount: event.target.value\n      });\n    };\n\n    this.state = {\n      provider: null,\n      account: null,\n      contract: null,\n      myBalance: 0,\n      stakedBalance: 0,\n      stakeAmount: 0,\n      myStakedAmount: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWallet();\n    await this.setContract();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [\"Hello \", this.state.account, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Balance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \" \", this.state.myBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"My Staked Amout:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), \" \", this.state.myStakedAmount, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.myStakedAmount,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Total Staked Amount: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), \" \", this.state.stakedBalance, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getStakedBalance,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 69\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"amount\",\n            name: \"amount\",\n            onChange: this.handleChange,\n            value: this.state.stakeAmount,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.stake,\n            children: \"Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.withdraw,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["ethers","Component","Staking","StakingTask","App","constructor","props","loadWallet","provider","providers","Web3Provider","window","ethereum","send","accounts","listAccounts","account","balance","getBalance","balanceInEth","utils","formatEther","setState","myBalance","setContract","chainId","getNetwork","networkData","networks","abi","contractAddress","address","console","log","signer","getSigner","contract","Contract","getStakedBalance","state","stakedBalance","stake","stack","from","value","parseEther","stakeAmount","withdraw","myStakedAmount","amount","handleChange","event","target","componentDidMount","render"],"sources":["/Users/upendra/Desktop/Developer/blockchain/practice/spearmintTask/stake7/stake7code/Staking/src/App.js"],"sourcesContent":["import './App.css';\nimport {ethers} from 'ethers';\nimport { Component } from 'react';\nimport Staking from './contracts/build/Staking.json'\nimport StakingTask from './contracts/build/'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      provider: null,\n      account: null,\n      contract: null,\n      myBalance:0,\n      stakedBalance:0,\n      stakeAmount:0,\n      myStakedAmount:0,\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWallet();\n    await this.setContract();\n  };\n\n  loadWallet = async () => {\n    // A Web3Provider wraps a standard Web3 provider, which is\n    // what MetaMask injects as window.ethereum into each page\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    // // MetaMask requires requesting permission to connect users accounts\n    await provider.send(\"eth_requestAccounts\", []);\n    const accounts = await provider.listAccounts();\n    const account = accounts[0];\n    const balance = await provider.getBalance(account);\n    const balanceInEth = ethers.utils.formatEther(balance);\n    \n    this.setState({provider: provider, account: account, myBalance: balanceInEth});\n  }\n\n  setContract = async() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    \n    //const networkId = await ethers.net.getId();\n    const { chainId } = await provider.getNetwork();\n    \n    const networkData = Staking.networks[5777];\n    \n    if(networkData) {\n      const abi = Staking.abi;\n      const contractAddress = networkData.address;\n      console.log('abi',abi);\n      const signer = provider.getSigner();\n      const contract = await new ethers.Contract(contractAddress, abi, signer);\n      \n      this.setState({contract:contract});\n    }\n  }\n\n  getStakedBalance = async () => {\n    const contract = this.state.contract;\n    const stakedBalance = await contract.getStakedBalance();\n    const balanceInEth = ethers.utils.formatEther(stakedBalance);\n\n    this.setState({stakedBalance:balanceInEth});\n  }\n\n  stake = async() => {\n    const contract = this.state.contract;\n    await contract.stack({from:this.state.account,value:ethers.utils.parseEther(this.state.stakeAmount)});\n  }\n\n  withdraw = async() => {\n    const contract = this.state.contract;\n    await contract.withdraw({from:this.state.account});\n  }\n\n  myStakedAmount = async() => {\n    const contract = this.state.contract;\n    const amount = await contract.myStakedAmount({from:this.state.account});\n    const balanceInEth = ethers.utils.formatEther(amount);\n    this.setState({myStakedAmount:balanceInEth});\n  }\n\n  handleChange = event => {\n    this.setState({stakeAmount:event.target.value});\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n          Hello {this.state.account}\n          <div>\n            <b>Balance:</b> {this.state.myBalance}\n          </div>\n          <div>\n            <b>My Staked Amout:</b> {this.state.myStakedAmount} <button onClick={this.myStakedAmount}>Refresh</button>\n          </div>\n          <div>\n            <b>Total Staked Amount: </b> {this.state.stakedBalance} <button onClick={this.getStakedBalance}>Refresh</button>\n          </div>\n          <div>\n          <div>\n            <input type=\"text\" id=\"amount\" name=\"amount\" onChange={this.handleChange} value={this.state.stakeAmount} autoComplete=\"off\"></input>\n            <button onClick={this.stake}>Stake</button>\n          </div>\n          <button onClick={this.withdraw}>Withdraw</button>\n          </div>\n      </div>\n    );\n  };\n}\nexport default App;"],"mappings":";AAAA,OAAO,WAAP;AACA,SAAQA,MAAR,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;EAE1BI,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAkBnBC,UAlBmB,GAkBN,YAAY;MACvB;MACA;MACA,MAAMC,QAAQ,GAAG,IAAIR,MAAM,CAACS,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB,CAHuB,CAIvB;;MACA,MAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;MACA,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,YAAT,EAAvB;MACA,MAAMC,OAAO,GAAGF,QAAQ,CAAC,CAAD,CAAxB;MACA,MAAMG,OAAO,GAAG,MAAMT,QAAQ,CAACU,UAAT,CAAoBF,OAApB,CAAtB;MACA,MAAMG,YAAY,GAAGnB,MAAM,CAACoB,KAAP,CAAaC,WAAb,CAAyBJ,OAAzB,CAArB;MAEA,KAAKK,QAAL,CAAc;QAACd,QAAQ,EAAEA,QAAX;QAAqBQ,OAAO,EAAEA,OAA9B;QAAuCO,SAAS,EAAEJ;MAAlD,CAAd;IACD,CA9BkB;;IAAA,KAgCnBK,WAhCmB,GAgCL,YAAW;MACvB,MAAMhB,QAAQ,GAAG,IAAIR,MAAM,CAACS,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB,CADuB,CAGvB;;MACA,MAAM;QAAEa;MAAF,IAAc,MAAMjB,QAAQ,CAACkB,UAAT,EAA1B;MAEA,MAAMC,WAAW,GAAGzB,OAAO,CAAC0B,QAAR,CAAiB,IAAjB,CAApB;;MAEA,IAAGD,WAAH,EAAgB;QACd,MAAME,GAAG,GAAG3B,OAAO,CAAC2B,GAApB;QACA,MAAMC,eAAe,GAAGH,WAAW,CAACI,OAApC;QACAC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBJ,GAAlB;QACA,MAAMK,MAAM,GAAG1B,QAAQ,CAAC2B,SAAT,EAAf;QACA,MAAMC,QAAQ,GAAG,MAAM,IAAIpC,MAAM,CAACqC,QAAX,CAAoBP,eAApB,EAAqCD,GAArC,EAA0CK,MAA1C,CAAvB;QAEA,KAAKZ,QAAL,CAAc;UAACc,QAAQ,EAACA;QAAV,CAAd;MACD;IACF,CAjDkB;;IAAA,KAmDnBE,gBAnDmB,GAmDA,YAAY;MAC7B,MAAMF,QAAQ,GAAG,KAAKG,KAAL,CAAWH,QAA5B;MACA,MAAMI,aAAa,GAAG,MAAMJ,QAAQ,CAACE,gBAAT,EAA5B;MACA,MAAMnB,YAAY,GAAGnB,MAAM,CAACoB,KAAP,CAAaC,WAAb,CAAyBmB,aAAzB,CAArB;MAEA,KAAKlB,QAAL,CAAc;QAACkB,aAAa,EAACrB;MAAf,CAAd;IACD,CAzDkB;;IAAA,KA2DnBsB,KA3DmB,GA2DX,YAAW;MACjB,MAAML,QAAQ,GAAG,KAAKG,KAAL,CAAWH,QAA5B;MACA,MAAMA,QAAQ,CAACM,KAAT,CAAe;QAACC,IAAI,EAAC,KAAKJ,KAAL,CAAWvB,OAAjB;QAAyB4B,KAAK,EAAC5C,MAAM,CAACoB,KAAP,CAAayB,UAAb,CAAwB,KAAKN,KAAL,CAAWO,WAAnC;MAA/B,CAAf,CAAN;IACD,CA9DkB;;IAAA,KAgEnBC,QAhEmB,GAgER,YAAW;MACpB,MAAMX,QAAQ,GAAG,KAAKG,KAAL,CAAWH,QAA5B;MACA,MAAMA,QAAQ,CAACW,QAAT,CAAkB;QAACJ,IAAI,EAAC,KAAKJ,KAAL,CAAWvB;MAAjB,CAAlB,CAAN;IACD,CAnEkB;;IAAA,KAqEnBgC,cArEmB,GAqEF,YAAW;MAC1B,MAAMZ,QAAQ,GAAG,KAAKG,KAAL,CAAWH,QAA5B;MACA,MAAMa,MAAM,GAAG,MAAMb,QAAQ,CAACY,cAAT,CAAwB;QAACL,IAAI,EAAC,KAAKJ,KAAL,CAAWvB;MAAjB,CAAxB,CAArB;MACA,MAAMG,YAAY,GAAGnB,MAAM,CAACoB,KAAP,CAAaC,WAAb,CAAyB4B,MAAzB,CAArB;MACA,KAAK3B,QAAL,CAAc;QAAC0B,cAAc,EAAC7B;MAAhB,CAAd;IACD,CA1EkB;;IAAA,KA4EnB+B,YA5EmB,GA4EJC,KAAK,IAAI;MACtB,KAAK7B,QAAL,CAAc;QAACwB,WAAW,EAACK,KAAK,CAACC,MAAN,CAAaR;MAA1B,CAAd;IACD,CA9EkB;;IAEjB,KAAKL,KAAL,GAAa;MACX/B,QAAQ,EAAE,IADC;MAEXQ,OAAO,EAAE,IAFE;MAGXoB,QAAQ,EAAE,IAHC;MAIXb,SAAS,EAAC,CAJC;MAKXiB,aAAa,EAAC,CALH;MAMXM,WAAW,EAAC,CAND;MAOXE,cAAc,EAAC;IAPJ,CAAb;EASD;;EAEsB,MAAjBK,iBAAiB,GAAG;IACxB,MAAM,KAAK9C,UAAL,EAAN;IACA,MAAM,KAAKiB,WAAL,EAAN;EACD;;EAgED8B,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,qBACW,KAAKf,KAAL,CAAWvB,OADtB,eAEI;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,OACmB,KAAKuB,KAAL,CAAWhB,SAD9B;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAKI;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,OAC2B,KAAKgB,KAAL,CAAWS,cADtC,oBACsD;UAAQ,OAAO,EAAE,KAAKA,cAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADtD;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eAQI;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,OACgC,KAAKT,KAAL,CAAWC,aAD3C,oBAC0D;UAAQ,OAAO,EAAE,KAAKF,gBAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAD1D;MAAA;QAAA;QAAA;QAAA;MAAA,QARJ,eAWI;QAAA,wBACA;UAAA,wBACE;YAAO,IAAI,EAAC,MAAZ;YAAmB,EAAE,EAAC,QAAtB;YAA+B,IAAI,EAAC,QAApC;YAA6C,QAAQ,EAAE,KAAKY,YAA5D;YAA0E,KAAK,EAAE,KAAKX,KAAL,CAAWO,WAA5F;YAAyG,YAAY,EAAC;UAAtH;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAQ,OAAO,EAAE,KAAKL,KAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAKA;UAAQ,OAAO,EAAE,KAAKM,QAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAqBD;;AAxGyB;;AA0G5B,eAAe3C,GAAf"},"metadata":{},"sourceType":"module"}